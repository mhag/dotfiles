autoload -U compinit; compinit
export PATH=$PATH:/usr/sbin:~/bin:/usr/local/bin
export HOSTNAME=hostname

alias su='sudo su -s /bin/zsh'

autoload -Uz zmv

autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
precmd () {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
RPROMPT="%1(v|%F{green}%1v%f|)"

zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
                             /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin

## Ë£úÂÆåÊôÇ„Å´Â§ßÂ∞èÊñáÂ≠ó„ÇíÂå∫Âà•„Åó„Å™„ÅÑ
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' menu select=1

# Â±•Ê≠¥
HISTFILE=~/.zsh-history
HISTSIZE=1000000
SAVEHIST=1000000

# Ë§áÊï∞„ÅÆ zsh „ÇíÂêåÊôÇ„Å´‰Ωø„ÅÜÊôÇ„Å™„Å© history „Éï„Ç°„Ç§„É´„Å´‰∏äÊõ∏„Åç„Åõ„ÅöËøΩÂä†„Åô„Çã
setopt append_history

# zsh „ÅÆÈñãÂßã„ÉªÁµÇ‰∫ÜÊôÇÂàª„Çí„Éí„Çπ„Éà„É™„Éï„Ç°„Ç§„É´„Å´Êõ∏„ÅçËæº„ÇÄ
setopt extended_history

# Áõ¥Ââç„Å®Âêå„Åò„Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„ÅØ„Éí„Çπ„Éà„É™„Å´ËøΩÂä†„Åó„Å™„ÅÑ
setopt hist_ignore_all_dups

# „Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„ÅÆÂÖàÈ†≠„Åå„Çπ„Éö„Éº„Çπ„ÅßÂßã„Åæ„ÇãÂ†¥Âêà„Éí„Çπ„Éà„É™„Å´ËøΩÂä†„Åó„Å™„ÅÑ
setopt hist_ignore_space

# „Ç∑„Çß„É´„ÅÆ„Éó„É≠„Çª„Çπ„Åî„Å®„Å´Â±•Ê≠¥„ÇíÂÖ±Êúâ
setopt share_history

# history (fc -l) „Ç≥„Éû„É≥„Éâ„Çí„Éí„Çπ„Éà„É™„É™„Çπ„Éà„Åã„ÇâÂèñ„ÇäÈô§„Åè„ÄÇ
setopt hist_no_store

# „Éí„Çπ„Éà„É™„ÇíÂëº„Å≥Âá∫„Åó„Å¶„Åã„ÇâÂÆüË°å„Åô„ÇãÈñì„Å´‰∏ÄÊó¶Á∑®ÈõÜ„Åß„Åç„ÇãÁä∂ÊÖã„Å´„Å™„Çã
setopt hist_verify

# Ë£úÂÆåÂÄôË£ú„ÅåË§áÊï∞„ÅÇ„ÇãÊôÇ„Å´„ÄÅ‰∏ÄË¶ßË°®Á§∫„Åô„Çã
setopt auto_list

# zsh: no matches found ÂØæÁ≠ñ
setopt nonomatch

# „Ç´„ÉÉ„Ç≥„ÅÆÂØæÂøú„Å™„Å©„ÇíËá™ÂãïÁöÑ„Å´Ë£úÂÆå„Åô„Çã
setopt auto_param_keys

# „Éá„Ç£„É¨„ÇØ„Éà„É™Âêç„ÅÆË£úÂÆå„ÅßÊú´Â∞æ„ÅÆ / „ÇíËá™ÂãïÁöÑ„Å´‰ªòÂä†„Åó„ÄÅÊ¨°„ÅÆË£úÂÆå„Å´ÂÇô„Åà„Çã
setopt auto_param_slash

# „Éì„Éº„ÉóÈü≥„ÇíÈ≥¥„Çâ„Åï„Å™„ÅÑ„Çà„ÅÜ„Å´„Åô„Çã
setopt NO_beep

# {a-c} „Çí a b c „Å´Â±ïÈñã„Åô„ÇãÊ©üËÉΩ„Çí‰Ωø„Åà„Çã„Çà„ÅÜ„Å´„Åô„Çã
setopt brace_ccl

# Ctrl+S/Ctrl+Q „Å´„Çà„Çã„Éï„É≠„ÉºÂà∂Âæ°„Çí‰Ωø„Çè„Å™„ÅÑ„Çà„ÅÜ„Å´„Åô„Çã
setopt NO_flow_control

# „Ç∑„Çß„É´„ÅåÁµÇ‰∫Ü„Åó„Å¶„ÇÇË£è„Ç∏„Éß„Éñ„Å´ HUP „Ç∑„Ç∞„Éä„É´„ÇíÈÄÅ„Çâ„Å™„ÅÑ„Çà„ÅÜ„Å´„Åô„Çã
setopt NO_hup

# Ctrl+D „Åß„ÅØÁµÇ‰∫Ü„Åó„Å™„ÅÑ„Çà„ÅÜ„Å´„Å™„ÇãÔºàexit, logout „Å™„Å©„Çí‰Ωø„ÅÜÔºâ
setopt ignore_eof

# „Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„Åß„ÇÇ # ‰ª•Èôç„Çí„Ç≥„É°„É≥„Éà„Å®Ë¶ã„Å™„Åô
setopt interactive_comments

# auto_list „ÅÆË£úÂÆåÂÄôË£ú‰∏ÄË¶ß„Åß„ÄÅls -F „ÅÆ„Çà„ÅÜ„Å´„Éï„Ç°„Ç§„É´„ÅÆÁ®ÆÂà•„Çí„Éû„Éº„ÇØË°®Á§∫
setopt list_types

# ÂÜÖÈÉ®„Ç≥„Éû„É≥„Éâ jobs „ÅÆÂá∫Âäõ„Çí„Éá„Éï„Ç©„É´„Éà„Åß jobs -l „Å´„Åô„Çã
setopt long_list_jobs

# „Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„ÅÆÂºïÊï∞„Åß --prefix=/usr „Å™„Å©„ÅÆ = ‰ª•Èôç„Åß„ÇÇË£úÂÆå„Åß„Åç„Çã
setopt magic_equal_subst

# „Éï„Ç°„Ç§„É´Âêç„ÅÆÂ±ïÈñã„Åß„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´„Éû„ÉÉ„ÉÅ„Åó„ÅüÂ†¥ÂêàÊú´Â∞æ„Å´ / „Çí‰ªòÂä†„Åô„Çã
setopt mark_dirs

# Ë§áÊï∞„ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„Éà„ÇÑ„Éë„Ç§„Éó„Å™„Å©„ÄÅÂøÖË¶Å„Å´Âøú„Åò„Å¶ tee „ÇÑ cat „ÅÆÊ©üËÉΩ„Åå‰Ωø„Çè„Çå„Çã
setopt multios

# 8 „Éì„ÉÉ„ÉàÁõÆ„ÇíÈÄö„Åô„Çà„ÅÜ„Å´„Å™„Çä„ÄÅÊó•Êú¨Ë™û„ÅÆ„Éï„Ç°„Ç§„É´Âêç„Å™„Å©„ÇíË¶ã„Çå„Çã„Çà„ÅÜ„Å´„Å™„Çã
setopt print_eightbit

# for, repeat, select, if, function „Å™„Å©„ÅßÁ∞°Áï•ÊñáÊ≥ï„Åå‰Ωø„Åà„Çã„Çà„ÅÜ„Å´„Å™„Çã
setopt short_loops

# Ëâ≤Ë®≠ÂÆö
autoload -U colors; colors

# „ÇÇ„Åó„Åã„Åó„Å¶Ê©üËÉΩ
setopt correct

# PCRE ‰∫íÊèõ„ÅÆÊ≠£Ë¶èË°®Áèæ„Çí‰Ωø„ÅÜ
setopt re_match_pcre

# „Éó„É≠„É≥„Éó„Éà„ÅåË°®Á§∫„Åï„Çå„Çã„Åü„Å≥„Å´„Éó„É≠„É≥„Éó„ÉàÊñáÂ≠óÂàó„ÇíË©ï‰æ°„ÄÅÁΩÆÊèõ„Åô„Çã
setopt prompt_subst

set_prompt() {
  local face
  face=$1
  if [ "$SSH_CLIENT" ]; then
    PROMPT="%B%{$fg[green]%}%m %~ %{%(?.$fg[cyan].$fg[red])%}$face%{$reset_color%}%b "
  else
    PROMPT="%B%{$fg[green]%}%~ %{%(?.$fg[cyan].$fg[red])%}$face%{$reset_color%}%b "
  fi
  if [ "_$SORAH_COMPACT" = "_1" ]; then
    PROMPT="%{%(?.$fg[cyan].$fg[red])%}$face%{$reset_color%}%b "
  fi
}
set_prompt "%(?.(‚ñ∞‚ïπ‚ó°‚ïπ%).„Éæ(ÔΩ°>Ôπè<ÔΩ°%)ÔæâÔæû)"

PROMPT2='%B%_%(?.%f.%S%F)%b %#%f%s '
SPROMPT="%r is correct? [n,y,a,e]: "


# set terminal title including current directory
#
case "${TERM}" in
kterm*|xterm)
    precmd() {
        echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
    }
    ;;
esac

# ÊñáÂ≠óÂàóÊú´Â∞æ„Å´ÊîπË°å„Ç≥„Éº„Éâ„ÅåÁÑ°„ÅÑÂ†¥Âêà„Åß„ÇÇË°®Á§∫„Åô„Çã
unsetopt promptcr

#„Ç≥„Éî„Éö„ÅÆÊôÇrprompt„ÇíÈùûË°®Á§∫„Åô„Çã
setopt transient_rprompt

# „Çπ„ÇØ„É™„Éº„É≥‰∏ä„Åã„ÇâË£úÂÆå„Åô„Çã„ÄÇCtrl + o
HARDCOPYFILE=$HOME/tmp/screen-hardcopy
touch $HARDCOPYFILE

dabbrev-complete () {
        local reply lines=80 # 80Ë°åÂàÜ
        screen -X eval "hardcopy -h $HARDCOPYFILE"
        reply=($(sed '/^$/d' $HARDCOPYFILE | sed '$ d' | tail -$lines))
        compadd - "${reply[@]%[*/=@|]}"
}

zle -C dabbrev-complete menu-complete dabbrev-complete
bindkey '^o' dabbrev-complete
bindkey '^o^_' reverse-menu-complete


# SSH„Ç≥„Éû„É≥„Éâ„ÅØscreen„ÅÆÊñ∞„Åó„ÅÑÁ™ì„Åß
function ssh_screen(){
 eval server=\${$#}
 screen -t $server ssh "$@"
}
if [ x$TERM = xscreen ]; then
  alias ssh=ssh_screen
fi

# ÊúÄÂæå„Å´Êâì„Å£„Åü„Ç≥„Éû„É≥„Éâ„Çπ„ÉÜ„Éº„Çø„ÇπË°å„Å´
if [ "$TERM" = "screen" ]; then
        chpwd () { echo -n "_`dirs`\\" }
        preexec() {
                # see [zsh-workers:13180]
                # http://www.zsh.org/mla/workers/2000/msg03993.html
                emulate -L zsh
                local -a cmd; cmd=(${(z)2})
                case $cmd[1] in
                        fg)     if (( $#cmd == 1 )); then
                                        cmd=(builtin jobs -l %+)
                                else
                                        cmd=(builtin jobs -l $cmd[2])
                                fi
                                ;;
                        %*)
                                cmd=(builtin jobs -l $cmd[1])
                                ;;
                        cd)     if (( $#cmd == 2 )); then
                                        cmd[1]=$cmd[2]
                                fi
                                ;&
                        *)
                                echo -n "k$cmd[1]:t\\"
                                return
                                ;;
                esac

                local -A jt; jt=(${(kv)jobtexts})

                $cmd >>(read num rest
                        cmd=(${(z)${(e):-\$jt$num}})
                        echo -n "k$cmd[1]:t\\") 2>/dev/null
        }
        chpwd
fi

function peco-select-history() {
    local tac
    if which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    BUFFER=$(history -n 1 | \
        eval $tac | \
        peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history

alias ls='ls -G'
eval "$(rbenv init -)"
export JAVA_HOME=`/usr/libexec/java_home`
source /usr/local/share/zsh/site-functions/_aws

export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$PATH

export PATH=$PATH:/usr/local/share/git-core/contrib/diff-highlight

